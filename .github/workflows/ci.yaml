name: Bonfire-Lit-CI

on:
  push:
    branches:
      - ci

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services-matrix: ${{ steps.matrix-generator.outputs.services-matrix }}
      has-changes: ${{ steps.matrix-generator.outputs.has-changes }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      
      - name: Detect changes in workflow files
        id: changed-workflow
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .github/workflows/

      - name: Detect changed service directories
        id: changed-services
        uses: tj-actions/changed-files@v44
        with:
          files: |
            src/gateway
            src/services/chat
            src/services/image

      - name: Detect changes in common modules
        id: changed-common
        uses: tj-actions/changed-files@v44
        with:
          files: |
            src/common
            src/consts
            src/idl
            src/rpc
            go.mod
            go.sum

      - name: Generate build matrix
        id: matrix-generator
        run: |
          # 定义获取所有服务列表的命令，确保输出为紧凑的单行JSON数组
          GET_ALL_SERVICES_JSON_COMMAND='(echo "gateway"; ls -1 src/services) | jq -R . | jq -cs .'
          # 优先级最高：如果 workflow 文件有变动，则重新构建所有服务
          if [[ "${{ steps.changed-workflow.outputs.any_changed }}" == "true" ]]; then
            echo "✅ Workflow files changed. Rebuilding all services."
            ALL_SERVICES=$(eval "$GET_ALL_SERVICES_JSON_COMMAND") # 使用eval执行命令
            echo "services-matrix=${ALL_SERVICES}" >> $GITHUB_OUTPUT
            echo "has-changes=true" >> $GITHUB_OUTPUT
          # 其次：如果公共模块有变动，则重新构建所有服务
          elif [[ "${{ steps.changed-common.outputs.any_changed }}" == "true" ]]; then
            echo "✅ Common modules changed. Rebuilding all services."
            ALL_SERVICES=$(eval "$GET_ALL_SERVICES_JSON_COMMAND") # 使用eval执行命令
            echo "services-matrix=${ALL_SERVICES}" >> $GITHUB_OUTPUT
            echo "has-changes=true" >> $GITHUB_OUTPUT
          # 最后：如果特定服务目录有变动，只构建对应的服务
          elif [[ "${{ steps.changed-services.outputs.any_changed }}" == "true" ]]; then
            echo "✅ Specific services changed."
            # 注意：此处 CHANGED_SERVICE_NAMES 已经是空格分隔的字符串
            # 需要将其转换为正确的JSON数组格式，例如 ["gateway","chat"]
            CHANGED_SERVICE_NAMES_RAW=$(echo "${{ steps.changed-services.outputs.all_changed_files }}" | sed 's|[^ ]*/||g')
            
            # 使用 jq 将空格分隔的字符串转换为 JSON 数组
            # 1. 替换空格为换行符
            # 2. 管道给 jq -R . 将每行转换为带引号的字符串
            # 3. 管道给 jq -cs . 将所有字符串组合成紧凑的JSON数组
            JSON_MATRIX=$(echo "$CHANGED_SERVICE_NAMES_RAW" | tr ' ' '\n' | jq -R . | jq -cs .)
            
            # 如果 changed-services.outputs.all_changed_files 是空的，则 JSON_MATRIX 可能是 [""] 或 []
            # 我们要确保它不包含空字符串项
            if [ -z "$CHANGED_SERVICE_NAMES_RAW" ]; then
              JSON_MATRIX="[]"
            fi
            
            echo "services-matrix=${JSON_MATRIX}" >> $GITHUB_OUTPUT
            echo "has-changes=true" >> $GITHUB_OUTPUT
          # 否则：无变化
          else
            echo "❌ No changes detected in services, common modules, or workflow files."
            echo "services-matrix=[]" >> $GITHUB_OUTPUT
            echo "has-changes=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false 
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services-matrix) }}
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          insecure-registries: ${{ secrets.DOCKER_REGISTRY }} 

      - name: Build and push image for ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: . 
          file: ${{ matrix.service == 'gateway' && './src/gateway/Dockerfile' || format('./src/services/{0}/Dockerfile', matrix.service) }}
          push: true
          tags: ${{ secrets.DOCKERHUB_REGISTRY }}/bonfirelit/${{ matrix.service }}:${{ github.sha }}

  update-config-repo:
    needs: [detect-changes, build-and-push]
    if: needs.detect-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Install yq
        uses: mikefarah/yq-action@v0.1.0

      - name: Checkout Config Repo
        uses: actions/checkout@v4
        with:
          repository: 'Fl0rencess720/Bonfire-Lit-Charts'
          token: ${{ secrets.PAT_FOR_CONFIG_REPO }}

      - name: Update Helm values for changed services
        run: |
          services_json='${{ needs.detect-changes.outputs.services-matrix }}'
          
          # 判断 services_json 是否为空数组，如果是，则跳过循环
          if [ "$(echo "$services_json" | jq '. | length')" -eq 0 ]; then
            echo "No services to update in Helm values."
            exit 0
          fi

          services_to_update=$(echo "$services_json" | jq -r '.[]')
          
          for service in $services_to_update; do
            echo "Updating Helm values for service: $service"
            values_file="./charts/$service/values.yaml"
            if [ -f "$values_file" ]; then
              yq e ".image.tag = \"${{ github.sha }}\"" -i "$values_file"
            else
              echo "Warning: $values_file not found. Skipping update for $service."
            fi
          done

      - name: Create Pull Request in Config Repo
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_FOR_CONFIG_REPO }}
          commit-message: "ci: Update image tags to ${{ github.sha }}"
          title: "CI: Deploy services for commit ${{ github.sha }}"
          body: |
            Automated PR to update image tags based on changes in App Repo commit `${{ github.sha }}`.

            **Updated services:**
            ${{ join(fromJson(needs.detect-changes.outputs.services-matrix), '\n- ') }}
            
            This PR was auto-generated by GitHub Actions.
          branch: "ci/auto-deploy-${{ github.sha }}" 
          base: "main" 
          delete-branch: true
