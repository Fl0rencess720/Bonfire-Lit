name: Bonfire-Lit-CI

on:
  push:
    branches:
      - ci

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services-matrix: ${{ steps.matrix-generator.outputs.services-matrix }}
      has-changes: ${{ steps.matrix-generator.outputs.has-changes }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      
      - name: Detect changes in workflow files
        id: changed-workflow
        uses: tj-actions/changed-files@v44
        with:
          files: |
            .github/workflows/

      - name: Detect changed service directories
        id: changed-services
        uses: tj-actions/changed-files@v44
        with:
          files: |
            src/gateway
            src/services/chat
            src/services/image

      - name: Detect changes in common modules
        id: changed-common
        uses: tj-actions/changed-files@v44
        with:
          files: |
            src/common
            src/consts
            src/idl
            src/rpc
            go.mod
            go.sum

      - name: Generate build matrix
        id: matrix-generator
        run: |
          # 优先级最高：如果 workflow 文件有变动，则重新构建所有服务
          if [[ "${{ steps.changed-workflow.outputs.any_changed }}" == "true" ]]; then
            echo "✅ Workflow files changed. Rebuilding all services."
            ALL_SERVICES=$( (echo "gateway"; ls -1 src/services) | jq -R . | jq -s . )
            echo "services-matrix=${ALL_SERVICES}" >> $GITHUB_OUTPUT
            echo "has-changes=true" >> $GITHUB_OUTPUT
          # 其次：如果公共模块有变动，则重新构建所有服务
          elif [[ "${{ steps.changed-common.outputs.any_changed }}" == "true" ]]; then
            echo "✅ Common modules changed. Rebuilding all services."
            ALL_SERVICES=$( (echo "gateway"; ls -1 src/services) | jq -R . | jq -s . )
            echo "services-matrix=${ALL_SERVICES}" >> $GITHUB_OUTPUT
            echo "has-changes=true" >> $GITHUB_OUTPUT
          # 最后：如果特定服务目录有变动，只构建对应的服务
          elif [[ "${{ steps.changed-services.outputs.any_changed }}" == "true" ]]; then
            echo "✅ Specific services changed."
            CHANGED_SERVICE_NAMES=$(echo "${{ steps.changed-services.outputs.all_changed_files }}" | sed 's|[^ ]*/||g')
            JSON_MATRIX=$(echo "[\"${CHANGED_SERVICE_NAMES// /\",\"}\"]")
            echo "services-matrix=${JSON_MATRIX}" >> $GITHUB_OUTPUT
            echo "has-changes=true" >> $GITHUB_OUTPUT
          # 否则：无变化
          else
            echo "❌ No changes detected in services, common modules, or workflow files."
            echo "services-matrix=[]" >> $GITHUB_OUTPUT
            echo "has-changes=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false 
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.services-matrix) }}
    
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKERHUB_REGISTRY }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push image for ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: . 
          file: ${{ matrix.service == 'gateway' && './src/gateway/Dockerfile' || format('./src/services/{0}/Dockerfile', matrix.service) }}
          push: true
          tags: ${{ secrets.DOCKERHUB_REGISTRY }}/bonfirelit/${{ matrix.service }}:${{ github.sha }}

  update-config-repo:
    needs: [detect-changes, build-and-push]
    if: needs.detect-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Install yq
        uses: mikefarah/yq-action@v0.1.0

      - name: Checkout Config Repo
        uses: actions/checkout@v4
        with:
          repository: 'Fl0rencess720/Bonfire-Lit-Charts'
          token: ${{ secrets.PAT_FOR_CONFIG_REPO }}

      - name: Update Helm values for changed services
        run: |
          services_json='${{ needs.detect-changes.outputs.services-matrix }}'
          
          # 判断 services_json 是否为空数组，如果是，则跳过循环
          if [ "$(echo "$services_json" | jq '. | length')" -eq 0 ]; then
            echo "No services to update in Helm values."
            exit 0
          fi

          services_to_update=$(echo "$services_json" | jq -r '.[]')
          
          for service in $services_to_update; do
            echo "Updating Helm values for service: $service"
            values_file="./charts/$service/values.yaml"
            if [ -f "$values_file" ]; then
              yq e ".image.tag = \"${{ github.sha }}\"" -i "$values_file"
            else
              echo "Warning: $values_file not found. Skipping update for $service."
            fi
          done

      - name: Create Pull Request in Config Repo
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.PAT_FOR_CONFIG_REPO }}
          commit-message: "ci: Update image tags to ${{ github.sha }}"
          title: "CI: Deploy services for commit ${{ github.sha }}"
          body: |
            Automated PR to update image tags based on changes in App Repo commit `${{ github.sha }}`.

            **Updated services:**
            ${{ join(fromJson(needs.detect-changes.outputs.services-matrix), '\n- ') }}
            
            This PR was auto-generated by GitHub Actions.
          branch: "ci/auto-deploy-${{ github.sha }}" 
          base: "main" 
          delete-branch: true
